<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="jin.chen.mapper.VideosUserMapper" >
  <resultMap id="BaseResultMap" type="jin.chen.pojo.vo.VideosVO" >
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="audio_id" property="audioId" jdbcType="VARCHAR" />
    <result column="video_desc" property="videoDesc" jdbcType="VARCHAR" />
    <result column="video_path" property="videoPath" jdbcType="VARCHAR" />
    <result column="video_seconds" property="videoSeconds" jdbcType="REAL" />
    <result column="video_width" property="videoWidth" jdbcType="INTEGER" />
    <result column="video_height" property="videoHeight" jdbcType="INTEGER" />
    <result column="cover_path" property="coverPath" jdbcType="VARCHAR" />
    <result column="like_counts" property="likeCounts" jdbcType="BIGINT" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="ts" property="ts" jdbcType="TIMESTAMP" />
    <!--column对应的是数据库中的字段，当然，如果查询出的字段使用了别名，那这里也要用别名   -->
    <result column="faceImage" property="faceImage" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
  </resultMap>

      <select id="queryAllVideos" resultMap="BaseResultMap" parameterType="String">
          select v.*, u.face_image faceImage, u.nickname nickname from videos v
          left join users u on v.user_id = u.id
          where 1=1
          <if test=" content != null and content != ''">
            and v.video_desc like '%${content}%'
          </if>
          <if test="userId != null and userId != ''">
              and v.user_id = #{userId}
          </if>
          and v.status = 1
          order by v.ts desc
      </select>

    <select id="queryCollectionVideos" parameterType="String" resultMap="BaseResultMap">
        SELECT v.*, u.face_image faceImage, u.nickname nickname  FROM videos v
        left join users u on v.user_id = u.id
        WHERE v.id IN (
        SELECT ulv.video_id FROM users_like_videos ulv WHERE ulv.user_id = #{userId}
        )
        and v.status = 1
        order by v.ts desc
    </select>

    <select id="queryFollowVideos" parameterType="String" resultMap="BaseResultMap">
        SELECT v.*, u.face_image faceImage, u.nickname nickname  FROM videos v
        left join users u on v.user_id = u.id
        WHERE v.user_id IN (
        SELECT uf.user_id from users_fans uf where uf.fans_id = #{userId}
        )
         and v.status = 1
         order by v.ts desc
    </select>

    <update id="addVideoLikeCounts" parameterType="String">
        update videos set like_counts  = like_counts + 1 where
        videos.id = #{videoId}
    </update>

    <update id="reduceVideoLikeCounts" parameterType="String">
        update videos set like_counts  = like_counts - 1 where
        videos.id = #{videoId}
    </update>
</mapper>